{"ast":null,"code":"import redux, { createStore } from 'redux';\nimport { createSlice } from '@reduxjs/toolkit';\ncreateSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    increase(state, action) {\n      state.counter = state.counter + action.amount;\n    },\n\n    toggle(state) {\n      state.showCounter = !show.counter;\n    }\n\n  }\n});\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\n\nconst counterReducer = (state = initialState, action) => {\n  if (action.type === 'increment') {\n    return {\n      counter: state.counter + 1,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === 'increase') {\n    return {\n      counter: state.counter + action.amount,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === 'decrement') {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === 'toggle') {\n    return {\n      showCounter: !state.showCounter,\n      counter: state.counter\n    };\n  }\n\n  return state;\n};\n\nconst store = createStore(counterReducer);\nexport default store;","map":{"version":3,"sources":["C:/laragon/www/redux-counter/src/store/index.js"],"names":["redux","createStore","createSlice","name","initialState","reducers","increment","state","counter","decrement","increase","action","amount","toggle","showCounter","show","counterReducer","type","store"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEAA,WAAW,CAAC;AACRC,EAAAA,IAAI,EAAE,SADE;AAERC,EAAAA,YAFQ;AAGRC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,SAAS,CAACC,KAAD,EAAO;AACZA,MAAAA,KAAK,CAACC,OAAN;AACH,KAHK;;AAINC,IAAAA,SAAS,CAACF,KAAD,EAAO;AACZA,MAAAA,KAAK,CAACC,OAAN;AACH,KANK;;AAONE,IAAAA,QAAQ,CAACH,KAAD,EAAQI,MAAR,EAAe;AACnBJ,MAAAA,KAAK,CAACC,OAAN,GAAgBD,KAAK,CAACC,OAAN,GAAgBG,MAAM,CAACC,MAAvC;AACH,KATK;;AAUNC,IAAAA,MAAM,CAACN,KAAD,EAAO;AACTA,MAAAA,KAAK,CAACO,WAAN,GAAoB,CAACC,IAAI,CAACP,OAA1B;AACH;;AAZK;AAHF,CAAD,CAAX;AAoBA,MAAMJ,YAAY,GAAG;AAACI,EAAAA,OAAO,EAAE,CAAV;AAAaM,EAAAA,WAAW,EAAE;AAA1B,CAArB;;AAEA,MAAME,cAAc,GAAG,CAACT,KAAK,GAAGH,YAAT,EAAwBO,MAAxB,KAAmC;AACtD,MAAGA,MAAM,CAACM,IAAP,KAAgB,WAAnB,EAA+B;AAC3B,WAAO;AACHT,MAAAA,OAAO,EAAED,KAAK,CAACC,OAAN,GAAc,CADpB;AAEHM,MAAAA,WAAW,EAAEP,KAAK,CAACO;AAFhB,KAAP;AAIH;;AAED,MAAGH,MAAM,CAACM,IAAP,KAAgB,UAAnB,EAA8B;AAC1B,WAAO;AACHT,MAAAA,OAAO,EAAED,KAAK,CAACC,OAAN,GAAeG,MAAM,CAACC,MAD5B;AAEHE,MAAAA,WAAW,EAAEP,KAAK,CAACO;AAFhB,KAAP;AAIH;;AAED,MAAIH,MAAM,CAACM,IAAP,KAAgB,WAApB,EAAgC;AAC5B,WAAM;AACFT,MAAAA,OAAO,EAAED,KAAK,CAACC,OAAN,GAAc,CADrB;AAEFM,MAAAA,WAAW,EAAEP,KAAK,CAACO;AAFjB,KAAN;AAIH;;AAED,MAAGH,MAAM,CAACM,IAAP,KAAgB,QAAnB,EAA4B;AACxB,WAAM;AACFH,MAAAA,WAAW,EAAE,CAACP,KAAK,CAACO,WADlB;AAEFN,MAAAA,OAAO,EAAED,KAAK,CAACC;AAFb,KAAN;AAIH;;AAED,SAAOD,KAAP;AACH,CA9BD;;AAgCA,MAAMW,KAAK,GAAGjB,WAAW,CAACe,cAAD,CAAzB;AAEA,eAAeE,KAAf","sourcesContent":["import redux, { createStore } from 'redux';\r\nimport { createSlice } from '@reduxjs/toolkit';\r\n\r\ncreateSlice({\r\n    name: 'counter',\r\n    initialState,\r\n    reducers: {\r\n        increment(state){\r\n            state.counter++;\r\n        },\r\n        decrement(state){\r\n            state.counter--;\r\n        },\r\n        increase(state, action){\r\n            state.counter = state.counter + action.amount;\r\n        },\r\n        toggle(state){\r\n            state.showCounter = !show.counter;\r\n        }\r\n    }\r\n});\r\n\r\n\r\nconst initialState = {counter: 0, showCounter: true}\r\n\r\nconst counterReducer = (state = initialState , action) => {\r\n    if(action.type === 'increment'){\r\n        return {\r\n            counter: state.counter+1,\r\n            showCounter: state.showCounter\r\n        }\r\n    }\r\n\r\n    if(action.type === 'increase'){\r\n        return {\r\n            counter: state.counter+ action.amount,\r\n            showCounter: state.showCounter\r\n        };\r\n    }\r\n\r\n    if (action.type === 'decrement'){\r\n        return{\r\n            counter: state.counter-1,\r\n            showCounter: state.showCounter\r\n        }\r\n    }\r\n\r\n    if(action.type === 'toggle'){\r\n        return{\r\n            showCounter: !state.showCounter,\r\n            counter: state.counter\r\n        }\r\n    }\r\n\r\n    return state\r\n}\r\n\r\nconst store = createStore(counterReducer);\r\n\r\nexport default store;\r\n\r\n"]},"metadata":{},"sourceType":"module"}